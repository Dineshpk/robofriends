{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","width","height","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAaeA,EAXF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,KAAKC,IAAG,+BAA0BH,GAAMI,MAAM,MAAMC,OAAO,QACpE,gCACI,6BAAKP,IACL,kCAAKC,YCcNO,EApBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAEb,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OAAQ,cAAC,EAAD,CAERV,GAAKO,EAAOG,GAAGV,GACfF,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,OAHXW,SCKPC,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACA,qBAAKZ,UAAU,MAAf,SACI,uBACAA,UAAU,kCACVa,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCDJI,EAND,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBhB,OAAQ,SAApE,SACKa,EAAMI,YCeHC,G,6DAjBZ,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAM,CACPC,UAAU,GAHA,E,qDAMtB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAU,CAACJ,UAAS,M,oBAGzB,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKV,MAAMI,a,GAfEQ,cCgDbC,E,kDAzCb,aAAc,IAAD,8BACX,gBAYFC,eAAe,SAACC,GACZ,EAAKJ,SAAS,CAACjB,YAAaqB,EAAMC,OAAOC,SAZ3C,EAAKX,MAAO,CACVjB,OAAQ,GACRK,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBwB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAM3C,WACG,IAAD,EAC6BZ,KAAKJ,MAA3BjB,EADP,EACOA,OAAOK,EADd,EACcA,YACR6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASjC,EAAYgC,kBAGzD,OAASrC,EAAOuC,OAIhB,sBAAK7C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWY,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WARvB,6C,GA1BYX,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2246da5b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='NB' src={`https://robohash.org/${id}`} width=\"240\" height=\"240\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p> {email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card ;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList=({robots})=>{\r\n   \r\n    return(\r\n        <div>\r\n        {\r\n            robots.map((user,i)=>{\r\n                return (<Card \r\n                key= {i} \r\n                id ={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email} \r\n                />);\r\n           })\r\n\r\n            \r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) =>{\r\n    return(\r\n    <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lighest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange ={searchChange} />\r\n        \r\n    </div>\r\n    );\r\n}\r\nexport default SearchBox;  ","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'5px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>);\r\n}\r\nexport default Scroll;","import React,{ Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError: false\r\n        }\r\n    }\r\ncomponentDidCatch(error,info){\r\n    this.setState ({hasError:true})\r\n}\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops!. Something is wrong</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport  default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport 'tachyons';\r\nimport './App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super()\r\n    this.state ={\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=> this.setState({robots: users}));\r\n  }\r\n  onSearchChange=(event) =>{\r\n      this.setState({searchfield: event.target.value})\r\n      \r\n  }\r\n  render()\r\n    {\r\n    const {robots,searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot=>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    return !(robots.length)?\r\n      <h1>Loading</h1>:\r\n  \r\n    (\r\n    <div className='tc'>\r\n        <h1 >Robofriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n           <CardList robots={filteredRobots}/>\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n    </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode> \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}